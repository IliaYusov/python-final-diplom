openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/v1/basket:
    get:
      operationId: api_v1_basket_retrieve
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_v1_basket_create
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    put:
      operationId: api_v1_basket_update
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_basket_destroy
      description: Класс для работы с корзиной пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/categories/:
    get:
      operationId: api_v1_categories_list
      description: Класс для просмотра категорий
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
  /api/v1/categories/{id}/:
    get:
      operationId: api_v1_categories_retrieve
      description: Класс для просмотра категорий
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Категория.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/order:
    get:
      operationId: api_v1_order_retrieve
      description: Класс для получения и размещения заказов пользователями
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_order_create
      description: Класс для получения и размещения заказов пользователями
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/partner/orders:
    get:
      operationId: api_v1_partner_orders_retrieve
      description: Класс для получения заказов поставщиками
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/partner/state:
    get:
      operationId: api_v1_partner_state_retrieve
      description: Класс для работы со статусом поставщика
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
    post:
      operationId: api_v1_partner_state_create
      description: Класс для работы со статусом поставщика
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /api/v1/partner/update:
    post:
      operationId: api_v1_partner_update_create
      description: Класс для обновления прайса от поставщика
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/products:
    get:
      operationId: api_v1_products_retrieve
      description: Класс для поиска товаров
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/shops/:
    get:
      operationId: api_v1_shops_list
      description: Класс для просмотра списка магазинов
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShopList'
          description: ''
  /api/v1/shops/{id}/:
    get:
      operationId: api_v1_shops_retrieve
      description: Класс для просмотра списка магазинов
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Магазин.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: ''
  /api/v1/user/contact:
    get:
      operationId: api_v1_user_contact_retrieve
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_user_contact_create
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_user_contact_update
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_user_contact_destroy
      description: Класс для работы с контактами покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/user/details:
    get:
      operationId: api_v1_user_details_retrieve
      description: Класс для работы данными пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_user_details_create
      description: Класс для работы данными пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/login:
    post:
      operationId: api_v1_user_login_create
      description: Класс для авторизации пользователей
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/password_reset:
    post:
      operationId: api_v1_user_password_reset_create
      description: Класс для запроса сброса пароля
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/password_reset/confirm:
    post:
      operationId: api_v1_user_password_reset_confirm_create
      description: Класс для подтверждения смены пароля
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/register:
    post:
      operationId: api_v1_user_register_create
      description: Для регистрации покупателей
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/user/register/confirm:
    post:
      operationId: api_v1_user_register_confirm_create
      description: Класс для подтверждения почтового адреса
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 40
      required:
      - id
      - name
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: string
          title: Город
          maxLength: 50
        street:
          type: string
          title: Улица
          maxLength: 100
        house:
          type: string
          title: Дом
          maxLength: 15
        structure:
          type: string
          title: Корпус
          maxLength: 15
        building:
          type: string
          title: Строение
          maxLength: 15
        apartment:
          type: string
          title: Квартира
          maxLength: 15
        user:
          type: integer
          writeOnly: true
          title: Пользователь
        phone:
          type: string
          title: Телефон
          maxLength: 20
      required:
      - city
      - id
      - phone
      - street
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ordered_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreate'
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          title: Статус
        dt:
          type: string
          format: date-time
          readOnly: true
        total_sum:
          type: integer
        contact:
          allOf:
          - $ref: '#/components/schemas/Contact'
          readOnly: true
      required:
      - contact
      - dt
      - id
      - ordered_items
      - state
      - total_sum
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product_info:
          type: integer
          title: Информация о продукте
        quantity:
          type: integer
          maximum: 2147483647
          title: Количество
          minimum: 0
        order:
          type: integer
          writeOnly: true
          title: Заказ
      required:
      - id
      - quantity
    OrderItemCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product_info:
          allOf:
          - $ref: '#/components/schemas/ProductInfo'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          title: Количество
          minimum: 0
        order:
          type: integer
          writeOnly: true
          title: Заказ
      required:
      - id
      - product_info
      - quantity
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedShopList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shop'
    Product:
      type: object
      properties:
        name:
          type: string
          title: Название
          maxLength: 80
        category:
          type: string
          readOnly: true
      required:
      - category
      - name
    ProductInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        model:
          type: string
          title: Модель
          maxLength: 80
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        shop:
          type: integer
          title: Магазин
        quantity:
          type: integer
          maximum: 2147483647
          title: Количество
          minimum: 0
        price:
          type: integer
          maximum: 2147483647
          title: Цена
          minimum: 0
        price_rrc:
          type: integer
          maximum: 2147483647
          title: Рекомендуемая розничная цена
          minimum: 0
        product_parameters:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
          readOnly: true
      required:
      - id
      - price
      - price_rrc
      - product
      - product_parameters
      - quantity
    ProductParameter:
      type: object
      properties:
        parameter:
          type: string
          readOnly: true
        value:
          type: string
          title: Значение
          maxLength: 100
      required:
      - parameter
      - value
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 50
        state:
          type: boolean
          title: Статус получения заказов
      required:
      - id
      - name
    StateEnum:
      enum:
      - basket
      - new
      - confirmed
      - assembled
      - sent
      - delivered
      - canceled
      type: string
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
